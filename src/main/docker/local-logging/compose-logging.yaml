version: '3.8'
services:

# Before running elasticsearch. Make sure number of vm.max_map_count is supported in vm (262144):
  # wsl -d docker-desktop
  # sysctl vm.max_map_count
  # sysctl -w vm.max_map_count=262144
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    ports:
      - '9200:9200'
    environment:
        discovery.type: single-node
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.7.0
    ports:
      - '5601:5601'
    restart: on-failure
    depends_on:
      - elasticsearch
  filebeat:
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:7.7.0
    command: filebeat -e -strict.perms=false
    volumes:
      - ./filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro  # Configuration file
      - /var/lib/docker/containers:/var/lib/docker/containers:ro            # Docker logs
      - /var/run/docker.sock:/var/run/docker.sock:ro                        # Additional information about containers
    user: root
    restart: on-failure
  jms:
    container_name: jms
    image: vromero/activemq-artemis
    ports:
      - '8161:8161'
      - '61616:61616'
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - '9411:9411'
  mysql:
    container_name: mysql
    image: mysql
    environment:
      - "MYSQL_ROOT_PASSWORD=1234"
    ports:
      - '3306:3306'
    volumes:
      - "./db_data:/var/lib/mysql"
  eureka:
    container_name: eureka
    image: johnwr/mssc-brewery-eureka #sfgbeerworks/sfg-brewery-eureka #
    ports:
      - '8761:8761'
  config:
    container_name: configserver
    image: johnwr/mssc-config-server #sfgbeerworks/sfg-brewery-config #
    ports:
      - '8888:8888'
    depends_on:
      - eureka
    environment:
        EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://netflix:eureka@eureka:8761/eureka
        EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
  inventory-service:
    container_name: inventory-service
    image: johnwr/mssc-beer-inventory-service
    ports:
      - '8082:8082'
    depends_on:
      - mysql
      - eureka
      - config
      - jms
      - zipkin
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://netflix:eureka@eureka:8761/eureka
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: 'true'
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      SPRING_PROFILES_ACTIVE: docker-discovery,localmysql
      # SPRING_ZIPKIN_BASEURL: http://zipkin:9411
      # SPRING_ZIPKIN_ENABLED: 'true'
      # SPRING.CLOUD.DISCOVERY.ENABLED: 'true'
      # SPRING_CLOUD_CONFIG_URI: http://config:8888
      # SPRING_ARTEMIS_HOST: jms
      # SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/beerinventoryservice?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    restart: on-failure
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  inventory-failover:
    container_name: inventory-failover
    image: johnwr/mssc-inventory-failover
    ports:
      - '8083:8083'
    depends_on:
      - eureka
      - config
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://netflix:eureka@eureka:8761/eureka
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
    restart: on-failure
  beer-service:
    container_name: beer-service
    image: johnwr/mssc-beer-service
    ports:
      - '8080:8080'
    depends_on:
      - mysql
      - eureka
      - config
      - jms
      - zipkin
      - inventory-service
    environment:
      # EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://netflix:eureka@eureka:8761/eureka
      # EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      SPRING_PROFILES_ACTIVE: docker-discovery,localmysql
      # SPRING_ZIPKIN_BASEURL: http://zipkin:9411
      # SPRING_ZIPKIN_ENABLED: 'true'
      # SPRING.CLOUD.DISCOVERY.ENABLED: 'true'
      # SPRING_CLOUD_CONFIG_URI: http://config:8888
      # SPRING_ARTEMIS_HOST: jms
      # SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/beerservice?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    restart: on-failure
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  order-service:
    container_name: order-service
    image: johnwr/mssc-beer-order-service
    ports:
      - '8081:8081'
    depends_on:
      - mysql
      - eureka
      - config
      - jms
      - zipkin
      - beer-service
    environment:
      # EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://netflix:eureka@eureka:8761/eureka
      # EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      SPRING_PROFILES_ACTIVE: docker-discovery,localmysql
      # SPRING_ZIPKIN_BASEURL: http://zipkin:9411
      # SPRING_ZIPKIN_ENABLED: 'true'
      # SPRING_CLOUD_DISCOVERY_ENABLED: 'true'
      # SPRING_ZIPKIN.DISCOVERYCLIENTENABLED: 'true'
      # SPRING_CLOUD_CONFIG_URI: http://config:8888
      # SPRING_ARTEMIS_HOST: jms
      # SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/beerorderservice?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
      # SFG_BREWERY_BEER-SERVICE-HOST: http://beer-service:8080
    restart: on-failure
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  gateway:
    container_name: gatewayserver
    image: johnwr/mssc-brewery-gateway
    ports:
      - '9090:9090'
    depends_on:
      - eureka
      - config
      - inventory-service
      - beer-service
      - order-service
      - inventory-failover
      - zipkin
    environment:
      # EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://netflix:eureka@eureka:8761/eureka
      # EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      SPRING_PROFILES_ACTIVE: docker-discovery
      # SPRING_ZIPKIN_BASEURL: http://zipkin:9411
      # SPRING_ZIPKIN_ENABLED: 'true'
      # SPRING_CLOUD_CONFIG_URI: http://config:8888
    restart: on-failure
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  jdl-studio:
    container_name: jdl-studio
    image: jhipster/jdl-studio
    ports:
      - '18090:80'
